{"version":3,"sources":["components/context/store.js","components/Selection/Selection.js","components/Ball/Ball.js","components/Tube/Tube.js","components/Instructions/Instructions.js","components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["ballsContext","createContext","BallsContextProvider","props","useState","initialRandomBalls","setInitialRandomBalls","randomBalls","setRandomBalls","movedBall","setMovedBall","undoCount","setUndoCount","undoMoves","setUndoMoves","completed","setComplited","shuffle","array","emptyTubes","Array","shuffled","i","length","j","Math","floor","random","push","splice","temp","concat","makeRandomBallsCopy","JSON","parse","stringify","console","log","chooseBallHandler","index","tempRandomBalls","Object","assign","class","rmChosenBallHandler","changeTubeHandler","movesHistory","didWinHandler","oldIndex","newIndex","tempUndoMoves","didWin","num","Provider","value","shuffleBalls","amount","arr","id","uuidv4","moveBallHandler","tube","undoHandler","undoItem","pop","restartHandler","children","Selection","useContext","className","colors","map","color","to","pathname","tubesClass","onClick","Ball","content","Tube","balls","ball","undefined","tubeArray","tubeIndex","Instructions","display","Board","instructionsDisply","setInstructionsDisply","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","window","location","reload","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76fc6060.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const ballsContext = createContext();\r\n\r\nconst BallsContextProvider = (props) => {\r\n\r\n  const [initialRandomBalls, setInitialRandomBalls] =  useState();\r\n  const [randomBalls, setRandomBalls] = useState();\r\n  const [movedBall, setMovedBall] = useState(null);\r\n  const [undoCount, setUndoCount] = useState(5);\r\n  const [undoMoves, setUndoMoves] = useState([]);\r\n  const [completed, setComplited] = useState(false);\r\n\r\n\r\n  // Create array of the correct length according to users` choice\r\n  const shuffleBalls = (amount) => {\r\n    let arr = [];\r\n    for (let i = 1; i <= amount; i++) {\r\n      for (let j = 0; j < 4; j++) {\r\n        arr.push({ num: i, id: uuidv4() })\r\n      }\r\n    }\r\n    shuffle(arr);\r\n  }\r\n  // Shuffles the attay and adds two empty tubes\r\n  const shuffle = (array) => {\r\n    let emptyTubes = new Array([], []);\r\n    let shuffled = [];\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    while (array.length) {\r\n      shuffled.push(array.splice(0, 4))\r\n    }\r\n    let temp = shuffled.concat(emptyTubes);\r\n    setRandomBalls(temp);\r\n    makeRandomBallsCopy(temp)\r\n  }\r\n  \r\n  const makeRandomBallsCopy = (random) => {\r\n    setInitialRandomBalls(JSON.parse(JSON.stringify(random)));\r\n    console.log('first init', initialRandomBalls)\r\n  }\r\n\r\n \r\n  // Select a ball \r\n  const chooseBallHandler = (index) => {\r\n    let tempRandomBalls = [...randomBalls];\r\n    setMovedBall(Object.assign(tempRandomBalls[index][tempRandomBalls[index].length - 1], { index: index }));\r\n    Object.assign(tempRandomBalls[index][tempRandomBalls[index].length - 1], { class: 'chosen' });\r\n    setRandomBalls(tempRandomBalls);\r\n    console.log('added');\r\n  }\r\n\r\n  // Deselect a ball\r\n  const rmChosenBallHandler = (index) => {\r\n    let tempRandomBalls = [...randomBalls];\r\n    delete tempRandomBalls[index][tempRandomBalls[index].length - 1].class;\r\n    setRandomBalls(tempRandomBalls);\r\n    setMovedBall(null);\r\n    console.log('removed');\r\n  }\r\n\r\n  // Move ball to a different tube\r\n  const changeTubeHandler = (index) => {\r\n    let tempRandomBalls = [...randomBalls];\r\n    delete tempRandomBalls[movedBall.index][tempRandomBalls[movedBall.index].length - 1].class;\r\n    tempRandomBalls[index].push(tempRandomBalls[movedBall.index][tempRandomBalls[movedBall.index].length - 1]);\r\n    tempRandomBalls[movedBall.index].splice(tempRandomBalls[movedBall.index].length - 1, 1);\r\n    setRandomBalls(tempRandomBalls);\r\n    setMovedBall(null);\r\n    console.log('moved');\r\n    movesHistory(movedBall.index, index);\r\n    didWinHandler();\r\n  }\r\n\r\n  // Save moves for the undo\r\n  const movesHistory = (oldIndex, newIndex) => {\r\n      let tempUndoMoves = [...undoMoves];\r\n    tempUndoMoves.push({oldIndex, newIndex});\r\n    if(tempUndoMoves.length > undoCount) {\r\n      tempUndoMoves.splice(0,tempUndoMoves.length - undoCount);\r\n    }\r\n    setUndoMoves(tempUndoMoves);\r\n    console.log(undoMoves)\r\n  }\r\n\r\n  const undoHandler = () => {\r\n    if(undoMoves.length === 0) {\r\n      return\r\n    };\r\n    if (undoCount === 0){\r\n      return\r\n    } else {\r\n      setUndoCount(undoCount-1);\r\n      let tempRandomBalls = [...randomBalls];\r\n      console.log('undoMoves', undoMoves)\r\n      let undoItem = tempRandomBalls[undoMoves[undoMoves.length-1].newIndex].pop();\r\n      console.log('undoItem',undoItem);\r\n      tempRandomBalls[undoMoves[undoMoves.length-1].oldIndex].push(undoItem);\r\n      setRandomBalls(tempRandomBalls);\r\n      let tempUndoMoves = [...undoMoves];\r\n      tempUndoMoves.pop();\r\n      setUndoMoves(tempUndoMoves);\r\n      console.log(undoCount)\r\n    }\r\n  }\r\n\r\n  // Check winning condition\r\n  const didWinHandler = () => {\r\n    let didWin;\r\n    for (let i = 0; i < randomBalls.length; i++) {\r\n      if (didWin === false) {\r\n        console.log('didWin is false')\r\n        break;\r\n      };\r\n      if(randomBalls[i].length !== 0 && randomBalls[i].length < 4){console.log('less than 4', randomBalls, i); didWin = false};\r\n      \r\n      if (randomBalls[i].length > 0 && randomBalls[i].length === 4) {\r\n        for (let j = 1; j < randomBalls[i].length; j++) {\r\n          if (randomBalls[i][j].num === randomBalls[i][j - 1].num) {\r\n            didWin = true;\r\n            console.log('equal to previous')\r\n          } else {\r\n            didWin = false;\r\n            console.log('not equal to previous')\r\n            console.log('break')\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      console.log(randomBalls)\r\n    }\r\n    return setComplited(didWin);\r\n  }\r\n\r\n  // Clicked ball handler\r\n  const moveBallHandler = (tube) => {\r\n    console.log(movedBall)\r\n    if (randomBalls[tube].length < 1 && movedBall === null) { return };\r\n\r\n    if (movedBall === null) {\r\n      chooseBallHandler(tube);\r\n    };\r\n\r\n    if (movedBall !== null) {\r\n      if (tube === movedBall.index) {\r\n        rmChosenBallHandler(tube);\r\n      }\r\n      else if (randomBalls[tube].length === 4) {\r\n        rmChosenBallHandler(movedBall.index);\r\n        chooseBallHandler(tube);\r\n      } else\r\n        if (randomBalls[tube].length < 1) {\r\n          changeTubeHandler(tube);\r\n        } else if (movedBall.num === randomBalls[tube][randomBalls[tube].length - 1].num && randomBalls[tube].length !== 4) {\r\n          changeTubeHandler(tube);\r\n        } else if (movedBall.num !== randomBalls[tube][randomBalls[tube].length - 1].num) {\r\n          rmChosenBallHandler(movedBall.index);\r\n          chooseBallHandler(tube);\r\n        };\r\n    }\r\n  }\r\n\r\n  // Start over the same game\r\n  const restartHandler = () => {\r\n    let temp = [...initialRandomBalls]\r\n    setRandomBalls(temp);\r\n    setUndoCount(5);\r\n    setUndoMoves([]);\r\n    console.log('init', initialRandomBalls, 'rand', randomBalls)\r\n  }\r\n\r\n  return (\r\n    <ballsContext.Provider value={\r\n      {\r\n        shuffleBalls,\r\n        randomBalls,\r\n        setRandomBalls,\r\n        moveBallHandler,\r\n        completed,\r\n        undoHandler,\r\n        undoCount,\r\n        initialRandomBalls,\r\n        setInitialRandomBalls,\r\n        restartHandler\r\n      }\r\n    }>\r\n      {props.children}\r\n    </ballsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default BallsContextProvider;","import React, {useContext} from 'react';\r\nimport './Selection.css'\r\nimport { ballsContext } from '../context/store';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Selection = (props) => {\r\n  \r\n  const {shuffleBalls} = useContext(ballsContext);\r\n  \r\n  return (\r\n    <div className='selection-container'>\r\n      <p> Try to sort the colored balls in the tubes until all balls with the same color stay in the same tube.</p>\r\n      <h3>How many colors would you like to sort?</h3>\r\n      <div className='selections'>\r\n        {props.colors.map((color) => (\r\n          color.num > 2 ?\r\n            <Link to={{pathname: '/board', tubesClass: color.num }} key={color.id} onClick={()=>shuffleBalls(color.num)}  >\r\n              <div className={`selection-ball color${color.num}`} >\r\n                {color.num}\r\n              </div>\r\n            </Link> : null\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selection;","import React from 'react';\r\nimport '../../App.css';\r\nimport '../Selection/Selection.css';\r\nimport './Ball.css';\r\n\r\nconst Ball = (props) => {\r\n\r\n  return ( \r\n    <div className={`ball color${props.content.num} ${props.content.class}`} key={props.content.id} >\r\n          </div>\r\n   );\r\n}\r\n \r\nexport default Ball;\r\n","import React, { useContext } from 'react';\r\nimport Ball from '../Ball/Ball';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Tube.css'\r\nimport { ballsContext } from '../context/store';\r\n\r\nconst Tube = (props) => {\r\n  const { moveBallHandler } = useContext(ballsContext);\r\n\r\n  return (\r\n    <div className='tube' onClick={() => moveBallHandler(props.index)} >\r\n      {props.balls.map((ball) =>\r\n        ball !== undefined ? <Ball content={ball} key={uuidv4()} tubeArray={props.balls} tubeIndex={props.index} /> : null\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tube;\r\n\r\n","import React from 'react';\r\nimport './Instructions.css';\r\n\r\nconst Instructions = (props) => {\r\n  return ( \r\n    <div className='instructions-container'>\r\n      <button className='close-instructions' onClick={()=>props.display('hide')}>X</button>\r\n      <h1>How to play?</h1>\r\n      <ul>\r\n        <li>Tap any tube to move the ball lie on top in the tube to another tube.</li>\r\n        <li>The rule is that you can only move a ball on top of another ball if both of them have the same color.</li>\r\n        <li>You can always move a ball to an empty tube.</li>\r\n        <li>Try not to get stuck - but don’t worry, you can always restart the level at any time.</li>\r\n      </ul>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Instructions;","import React, { useContext, useState } from 'react';\r\nimport Tube from '../Tube/Tube';\r\nimport './Board.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Confetti from 'react-dom-confetti';\r\nimport Instructions from '../Instructions/Instructions';\r\n\r\nimport { ballsContext } from '../context/store';\r\n\r\n\r\nconst Board = (props) => {\r\n\r\n  const { randomBalls, completed, undoHandler, undoCount, restartHandler } = useContext(ballsContext);\r\n  const [instructionsDisply, setInstructionsDisply] = useState('hide');\r\n\r\n  const config = {\r\n    angle: 90,\r\n    spread: 360,\r\n    startVelocity: 40,\r\n    elementCount: 70,\r\n    dragFriction: 0.12,\r\n    duration: 3000,\r\n    stagger: 3,\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    perspective: \"500px\",\r\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\r\n  };\r\n\r\n  return (\r\n    <div className='board-container'>\r\n      {instructionsDisply === 'show' ? <Instructions display={setInstructionsDisply} /> : null }\r\n      <header className='header'>\r\n      <Confetti active={completed} config={config} />\r\n        <button className='header-controls'onClick={()=>setInstructionsDisply('show')}>How to play</button>\r\n        <button className='header-controls' onClick={() => window.location.reload()}>New game</button>\r\n        <button className='header-controls' onClick={() => restartHandler()}>Reset</button>\r\n        <button className='header-controls' onClick={() => undoHandler()}>Undo {undoCount}</button>\r\n      </header>\r\n      <div className={`tubes-container`}>\r\n        {/* <div className={`tubes-container tubes${props.location.tubesClass}`}> */}\r\n        {randomBalls !== undefined ? randomBalls.map((tube, index) => tube !== undefined ? <Tube balls={tube} key={uuidv4()} index={index} /> : <div className='tube'></div>) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Selection from './components/Selection/Selection';\nimport Board from './components/Board/Board';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MemoryRouter, Switch, Route } from 'react-router-dom';\nimport BallsContextProvider from './components/context/store';\n\nfunction App() {\n\n  const colors = [\n    { num: 1, id: uuidv4() },\n    { num: 2, id: uuidv4() },\n    { num: 3, id: uuidv4() },\n    { num: 4, id: uuidv4() },\n    { num: 5, id: uuidv4() },\n    { num: 6, id: uuidv4() },\n    { num: 7, id: uuidv4() },\n    { num: 8, id: uuidv4() }\n  ];\n\n  return (\n    <BallsContextProvider>\n      <MemoryRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/'\n              render={(props) => <Selection colors={colors} {...props} />}\n            />\n            <Route exact path='/board'\n              render={(props) => <Board colors={colors} {...props} />}\n            />\n          </Switch>\n          <footer>© 2021 Created by Lital Shalom</footer>\n        </div>\n      </MemoryRouter>\n    </BallsContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}